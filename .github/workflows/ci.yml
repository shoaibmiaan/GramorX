name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      NEXT_TELEMETRY_DISABLED: '1'
      NODE_VERSION: '20'
      NODE_ENV: test

      # âœ… Dummy values so env.ts validation passes in CI
      NEXT_PUBLIC_SUPABASE_URL: https://example.supabase.co
      NEXT_PUBLIC_SUPABASE_ANON_KEY: anon_dummy
      SUPABASE_URL: https://example.supabase.co
      SUPABASE_SERVICE_KEY: service_dummy
      SUPABASE_SERVICE_ROLE_KEY: role_dummy

      TWILIO_ACCOUNT_SID: ACxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
      TWILIO_AUTH_TOKEN: dummytoken
      TWILIO_VERIFY_SERVICE_SID: VAXxxxxxxxxxxxxxxxxxxxxxxxx
      TWILIO_WHATSAPP_FROM: whatsapp:+10000000000

      NEXT_PUBLIC_IDLE_TIMEOUT_MINUTES: '60'

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
      - run: npm ci
      - run: npm test           # now uses tsx and has env set
      - run: npm run lint
      - run: npm run build

  preview:
    needs: build
    runs-on: ubuntu-latest
    env:
      NODE_VERSION: '20'
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
      - run: npm ci
      - run: npx vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}
      - run: npx vercel build --token=${{ secrets.VERCEL_TOKEN }}
      - run: npx vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }}
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
